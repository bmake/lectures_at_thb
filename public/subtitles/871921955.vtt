WEBVTT - This file was automatically generated by VIMEO

0
00:00:02.780 --> 00:00:05.760
In this part, we will analyze some, uh,

1
00:00:05.760 --> 00:00:08.080
simple queries for data analysis.

2
00:00:09.280 --> 00:00:14.120
I will stay in that not presentation mode because I, in this way,

3
00:00:14.320 --> 00:00:15.320
I can, um,

4
00:00:17.000 --> 00:00:20.640
I can copy the queries and show you how they work.

5
00:00:20.860 --> 00:00:24.880
So let's start with, um, what I already, uh,

6
00:00:24.880 --> 00:00:29.600
announced that we might be interested in enhancing the readability

7
00:00:29.780 --> 00:00:33.120
of output data. And for that it might, uh,

8
00:00:33.220 --> 00:00:37.640
be sensible not to output the U R I, but, uh,

9
00:00:38.070 --> 00:00:41.160
some labels or names and things like that.

10
00:00:41.380 --> 00:00:45.160
So the resources mostly are annotated with labels,

11
00:00:45.580 --> 00:00:48.680
and this can enhance the readability. Um,

12
00:00:49.220 --> 00:00:54.080
in practic practice, there are diverse labels used, uh, for instance,

13
00:00:54.200 --> 00:00:58.280
R D F S label or even schema name or scpr label.

14
00:00:59.380 --> 00:01:04.280
And if it's an, uh, unknown knowledge graph, you might,

15
00:01:04.460 --> 00:01:08.760
uh, first analyze which, uh, labels are used there.

16
00:01:09.060 --> 00:01:13.720
Or we will come later on to another possibility which might be used

17
00:01:13.790 --> 00:01:18.040
that you, um, ask or that you yeah,

18
00:01:18.500 --> 00:01:19.720
ask the, um,

19
00:01:20.180 --> 00:01:24.840
the query or ask in the query for different kinds of labels. But here we,

20
00:01:25.020 --> 00:01:29.120
uh, stick to, um, to course prep label.

21
00:01:30.020 --> 00:01:31.880
So we want to select, um,

22
00:01:32.340 --> 00:01:35.080
the services and also the pref label.

23
00:01:35.340 --> 00:01:40.000
It would be also possible only to output the pref labels, but we,

24
00:01:40.140 --> 00:01:40.973
um,

25
00:01:41.510 --> 00:01:46.040
need the variable for the services also because first they,

26
00:01:46.180 --> 00:01:50.520
we have to, uh, address them in this, uh, graph, um,

27
00:01:50.990 --> 00:01:55.160
pattern. Yeah, so we want to have all services,

28
00:01:55.530 --> 00:01:59.960
which are declared as a schema service. And, uh,

29
00:02:00.180 --> 00:02:04.040
the s and then afterwards, we want, want to, uh,

30
00:02:04.390 --> 00:02:09.240
have their SPR labels here. Um, it also can be, um,

31
00:02:09.670 --> 00:02:14.320
transferred to a mortars form. Yeah, you can put here this, um,

32
00:02:15.830 --> 00:02:17.680
semicolon and, um,

33
00:02:19.790 --> 00:02:24.400
omit this, uh, secondary mention of service. It, uh,

34
00:02:24.620 --> 00:02:28.320
is also syntactically, um, perfect, usable.

35
00:02:29.020 --> 00:02:32.760
So let's go. We want to, uh,

36
00:02:33.730 --> 00:02:37.600
again, copy the query and go to the,

37
00:02:39.290 --> 00:02:41.910
to the EC server, to the sparkle endpoint.

38
00:02:44.890 --> 00:02:45.990
Syntax is okay.

39
00:02:47.330 --> 00:02:52.150
And now we run the query. And you have here,

40
00:02:52.730 --> 00:02:56.110
um, the, your eyes of the services.

41
00:02:56.410 --> 00:03:00.280
You can see that you have 68 entries,

42
00:03:00.980 --> 00:03:04.280
and here are the pref labels of the service.

43
00:03:04.620 --> 00:03:09.480
But what you also can see is that the pref labels are added with

44
00:03:09.720 --> 00:03:14.440
a so-called language tech. And you can see that each service has,

45
00:03:14.900 --> 00:03:15.733
um,

46
00:03:15.740 --> 00:03:20.480
an language tech or an a pref label in a German and a pref

47
00:03:20.480 --> 00:03:24.440
label in English. So in the end, we do not have, uh,

48
00:03:24.450 --> 00:03:29.280
68 services in the application. On the knowledge graph described this,

49
00:03:29.300 --> 00:03:31.240
are, they are only 34,

50
00:03:31.340 --> 00:03:36.160
but each of the service has two a pref labels in this

51
00:03:36.160 --> 00:03:40.320
both languages. And therefore, you get an output of, uh,

52
00:03:40.320 --> 00:03:45.160
68 entries. We will afterwards see how we can,

53
00:03:45.620 --> 00:03:46.453
um,

54
00:03:46.660 --> 00:03:51.280
filter only the German or only the English, uh,

55
00:03:51.700 --> 00:03:56.680
labels. Uh, and, uh, as I told you, you can omit here,

56
00:03:56.980 --> 00:03:59.080
uh, in the select, uh,

57
00:03:59.220 --> 00:04:03.040
clause the service so that we will not get the,

58
00:04:03.040 --> 00:04:07.880
your eyes in the output, but only the labels. It works the same.

59
00:04:09.260 --> 00:04:12.880
And here you see again,

60
00:04:13.060 --> 00:04:15.720
the same 68 entries, uh,

61
00:04:15.860 --> 00:04:20.160
but only the labels and not the UIs itself.

62
00:04:20.220 --> 00:04:24.720
So it depends what you need for the output. Should it be, um,

63
00:04:25.160 --> 00:04:29.760
readable for humans or do you want to use them

64
00:04:30.060 --> 00:04:33.360
in an application? And, and so on and so on.

65
00:04:35.950 --> 00:04:39.720
Okay, let's go to the next. Uh, as I told you,

66
00:04:39.820 --> 00:04:44.600
you can filter labels in specific languages. So, uh,

67
00:04:44.700 --> 00:04:48.600
the label are in our knowledge graph at least, um,

68
00:04:49.740 --> 00:04:54.120
uh, extended with so, such, uh, so-called language strings.

69
00:04:54.340 --> 00:04:58.920
And for that we use the, um, keyword filter,

70
00:04:59.090 --> 00:05:03.320
which is standard keyword also used in other, uh,

71
00:05:03.320 --> 00:05:08.040
query languages. So you can see here, more or less the same as we had before,

72
00:05:08.820 --> 00:05:11.480
but here added the filter clause.

73
00:05:12.020 --> 00:05:14.520
So we have here the, um,

74
00:05:15.910 --> 00:05:19.240
keyword length for language, and then in, um,

75
00:05:20.260 --> 00:05:22.880
in braces you have the, um,

76
00:05:23.380 --> 00:05:28.040
the variable for what we want to filter the, uh,

77
00:05:28.640 --> 00:05:32.080
language, um, tag or the language specification.

78
00:05:32.860 --> 00:05:37.000
And we want to have only the English, uh, the English.

79
00:05:37.740 --> 00:05:42.730
So I think it might be enough to filter

80
00:05:43.080 --> 00:05:47.490
this line, the others we have already here.

81
00:05:48.030 --> 00:05:52.850
So we can add here within the curly braces this,

82
00:05:52.990 --> 00:05:57.480
uh, filter cloth and run the query.

83
00:05:57.820 --> 00:06:00.200
And now we must get

84
00:06:00.300 --> 00:06:03.760
33, 34 entries.

85
00:06:04.260 --> 00:06:09.160
And you can see here 34 services are in our

86
00:06:09.800 --> 00:06:14.170
database. And, um, yeah, the, um,

87
00:06:15.450 --> 00:06:18.450
language texts are also part of the output.

88
00:06:18.550 --> 00:06:23.490
So if you want to use them afterwards for, um, for,

89
00:06:24.870 --> 00:06:28.010
for an application for the user interface of an application,

90
00:06:28.070 --> 00:06:31.210
you have to do some programming to, to omit that.

91
00:06:33.430 --> 00:06:34.263
Uh,

92
00:06:34.980 --> 00:06:38.610
let's have a look a little bit on the raw response.

93
00:06:41.630 --> 00:06:44.610
Ah-huh on the raw response. Uh, you can hear,

94
00:06:45.190 --> 00:06:49.370
get this without this, um, language text.

95
00:06:49.590 --> 00:06:54.010
So maybe for programming, it's easier to access it here.

96
00:06:54.880 --> 00:06:58.330
Okay. Then let's go to the next.

97
00:07:00.310 --> 00:07:01.143
Um,

98
00:07:01.990 --> 00:07:06.720
so imagine that you want to, to,

99
00:07:07.300 --> 00:07:11.960
um, search for more complex, uh, graph patterns,

100
00:07:12.500 --> 00:07:17.400
for instance. Um, yeah, let's take this, the example we have here. So we,

101
00:07:17.490 --> 00:07:21.200
again, are searching for services, but um,

102
00:07:21.740 --> 00:07:23.560
we also want to, um,

103
00:07:23.940 --> 00:07:28.720
get the information for what this, or with,

104
00:07:28.720 --> 00:07:32.120
with which, um, which

105
00:07:33.630 --> 00:07:38.440
item or with which, uh, GA gadget the service is,

106
00:07:38.540 --> 00:07:43.360
um, usable for that we, uh, use the, um,

107
00:07:44.440 --> 00:07:48.240
relation IT card usable with. And, um,

108
00:07:49.580 --> 00:07:54.000
it might be that we have services where this property

109
00:07:54.540 --> 00:07:57.080
is not represented in the knowledge graph.

110
00:07:57.220 --> 00:08:02.000
So this might be services which are not accessible or not usable

111
00:08:02.390 --> 00:08:06.480
with a laptop or with a, a tablet or a thing like that,

112
00:08:06.480 --> 00:08:08.840
because it's a main basic,

113
00:08:09.330 --> 00:08:13.040
let's say technical service for what? For who,

114
00:08:13.180 --> 00:08:18.080
for which it's not relevant to be, uh, used with such an,

115
00:08:18.220 --> 00:08:21.320
um, such a final, uh,

116
00:08:22.770 --> 00:08:27.670
final application technology. And, uh,

117
00:08:29.690 --> 00:08:34.350
but to, to get nevertheless all services in, in addition,

118
00:08:34.490 --> 00:08:36.470
the information, uh,

119
00:08:36.580 --> 00:08:41.230
whether the service is usable with a specific appliance,

120
00:08:41.580 --> 00:08:46.310
then we can put this clause in, uh,

121
00:08:46.700 --> 00:08:49.470
this optional specific clause. Yeah,

122
00:08:49.530 --> 00:08:53.270
you can see it's also with a curly a braces.

123
00:08:53.730 --> 00:08:58.200
It is put in the main curly braces of the work loss. Um,

124
00:08:58.380 --> 00:09:00.880
but you have here, in addition this, um,

125
00:09:01.910 --> 00:09:06.880
keyword optional that mean the output will be all services.

126
00:09:07.260 --> 00:09:11.720
And if the service has also for the service is

127
00:09:12.160 --> 00:09:15.360
declared additional information, uh,

128
00:09:15.430 --> 00:09:20.160
with which appliances is usable with, then this information is also,

129
00:09:20.540 --> 00:09:23.280
uh, provided. So if you think of the table,

130
00:09:23.810 --> 00:09:28.600
which might be the outcome for two, for two variables,

131
00:09:28.670 --> 00:09:32.360
then there might be some holes in the table,

132
00:09:32.630 --> 00:09:36.360
some empty cells. Okay, let's try it out.

133
00:09:48.700 --> 00:09:49.533
Okay.

134
00:09:50.290 --> 00:09:53.710
And now we will get the table output again.

135
00:09:56.170 --> 00:10:00.070
So what we see, we see, uh, 90,

136
00:10:00.970 --> 00:10:05.590
uh, six, um, entries. There is again, uh,

137
00:10:06.060 --> 00:10:10.910
some redundancy. This is, um, in the nature of, of this, um,

138
00:10:11.780 --> 00:10:16.310
kind of, um, database and kind of query language.

139
00:10:16.730 --> 00:10:20.110
You can see that we have the service, um,

140
00:10:21.520 --> 00:10:24.700
it, um, B S C V for instance.

141
00:10:25.280 --> 00:10:29.860
And this service is accessible or usable with three

142
00:10:29.860 --> 00:10:30.940
different, uh,

143
00:10:32.390 --> 00:10:37.340
three different kinds of technology with laptop, with computer, with smartphone.

144
00:10:37.760 --> 00:10:38.030
Uh,

145
00:10:38.030 --> 00:10:42.660
today it might be of interest whether there's a difference between laptop and

146
00:10:42.940 --> 00:10:47.740
computer, but at that time, uh, we thought it is. And, uh, here for instance,

147
00:10:47.960 --> 00:10:51.980
you have a service web hosting where it's not, um,

148
00:10:52.820 --> 00:10:57.300
interesting to have it, uh, accessible or usable with this, um,

149
00:10:58.290 --> 00:11:01.780
with this technology. And therefore you have here an empty cell.

150
00:11:02.200 --> 00:11:06.590
And the same is, uh, going on. Okay,

151
00:11:10.530 --> 00:11:10.880
Let's

152
00:11:10.880 --> 00:11:14.740
Go back. Ah, yeah, this is, uh,

153
00:11:14.840 --> 00:11:16.340
the last for this part.

154
00:11:18.900 --> 00:11:19.190
Okay.
